# Good container names make it easier to identify what it's doing.
#  As seen in the examples below, the container names have a dash in them.
# The dash indicates what it's for.
wordpress_container_name=Wordpress-Site # Wordpress Site
# This is the Wordpress Database Username.
# Set this to what you want.
WORDPRESS_DB_USER="WPADMINUSER"
WORDPRESS_DB_PASSWORD="SUPERSTRONGWPADMINUSERPASSWORD" # Make this long and secure.
# This will be the name of the Wordpress Database
# Keep in mind that this database is only used by this container.
# There will only be this one database.
# I like short names but you can name it what you want.
WORDPRESS_DB_NAME="wp"
# Volume paths store persistent data on the server.
# I put all docker persistent data in the "portmaster" user's
# home folder.
# The "portmaster" user has no login or shell.
wordpress_data="/home/pm/.appdata/wordpress/data"

wordpressDB_container_name=Wordpress-DB # Wordpress Database
# This is the Wordpress Database Password.
# for the mysql root user.
# make this different from WORDPRESS_DB_PASSWORD above
MYSQL_ROOT_PASSWORD='SUPERSTRONGROOTPASSWORD'
MYSQL_DATABASE='wp' # Same as WORDPRESS_DB_NAME above.
MYSQL_USER='WPADMINUSER' # Same as WORDPRESS_DB_USER above.
MYSQL_PASSWORD='SUPERSTRONGWPADMINUSERPASSWORD' # Same as WORDPRESS_DB_PASSWORD above.

# User and group ids generated when a user is added.
# Since this is an ubuntu install the ubuntu user is set at
# uid=1001 and guid=1001. Each user id is incremented by one
# so this user will get uid=1002 and guid=1002.
# Here we set it with the defaults set in the
# group_vars/all/server.yml file used by ansible.
PUID=1002 # portmaster user id
PGID=1002 # portmaster group id
TZ=America/New_York # the timezone of your server

# Volume paths store persistent data on the server.
# I put all docker persistent data in the
# "portmaster" user's home folder.
# The "portmaster" user has no login or shell.
db_data="/home/pm/.appdata/wordpress-db"

adminer_container_name=WordpressDB-GUI # Wordpress Database GUI
ADMINER_PORT=8080 # The port the adminer web interface will be available on.
# If a plugin requires parameters to work correctly
# instead of adding the plugin to ADMINER_PLUGINS,
# you need to add a custom file to the container.
ADMINER_PLUGINS="tables-filter tinymce" # plugins to load.
ADMINER_DESIGN='pappu687' # the design to use.
# Here we take advantage of dockers hostname networking.
# Since we put this here for wordpress, we will use 'wordpressdb'
# as the hostname. We can do this because in the docker-compose.yml
# file we have the wordpressdb service: named 'wordpressdb'
ADMINER_DEFAULT_SERVER='wordpressdb' # the default server to use.